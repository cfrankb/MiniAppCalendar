name: Build

on:
  push:
    branches: 
      - 'master'
      - 'continuous-integration'
    tags:
      - 'v*'
  pull_request:
    branches:
      - 'master'
      - 'continuous-integration'

defaults:
  run:
    shell: cmd

env:
  BUILD_TYPE: Release
  SOURCE_DIR:   ${{ github.workspace }}
  QT_VERSION:   5.15.2
  ARTIFACT:     MiniAppCalendar.zip  

jobs:
  build:
    runs-on: windows-2019

    steps:

      - name: checkout repo
        uses: actions/checkout@v3

      - name: (2) Get all tags for correct version determination
        working-directory:  ${{ github.workspace }}
        run: |
          git fetch --all --tags -f

      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version:      ${{ env.QT_VERSION }}
          host:         windows
          target:       desktop
          arch:         win64_msvc2019_64
          dir:          ${{ runner.temp }}
          modules:      qtcore qtwidgets qtgui   #qtcharts qt3d
          setup-python: false

      - name: Download JOM
        uses: suisei-cn/actions-download-file@v1
        with:
          url:    http://download.qt.io/official_releases/jom/jom.zip
          target: ${{ runner.temp }}\

      - name: Unzip JOM
        working-directory: ${{ runner.temp }}
        run:  |
              7z x jom.zip -ojom
              
      - name: Create build directory
        run:  mkdir ${{ runner.temp }}\build

      - name: Set up Visual Studio shell
        uses: egor-tensin/vs-shell@v2
        with:
          arch: x64

      - name: Build
        working-directory: ${{ runner.temp }}\build
        run:  |
              qmake -r ${{ env.SOURCE_DIR }}\src\\MiniAppCalendar.pro
              ${{ runner.temp }}\jom\jom -j2
              dir /s
              cd release
              windeployqt --qmldir ${{ env.SOURCE_DIR }}\\src MiniAppCalendar.exe --pdb --release --no-compiler-runtime  --no-translations  --no-system-d3d-compiler --no-opengl-sw
              copy C:\Windows\System32\concrt140.dll . 
              copy C:\Windows\System32\vccorlib140.dll .
              copy C:\Windows\System32\msvcp140.dll .
              copy C:\Windows\System32\vcruntime140.dll .
              del *.obj
              del *.cpp
              del *.h
              del *.res
              
      #- name: Zip build
      #  working-directory: ${{ runner.temp }}
      #  run:  |
      #        cd build\release
      #        7z a MiniAppCalendar.zip -stxzip * -r
      #        move MiniAppCalendar.zip ..\..
              
      - name: Save build artifact
        uses: actions/upload-artifact@master
        with:
          name: ${{ env.ARTIFACT }}
          #path: ${{ runner.temp }}\${{ env.ARTIFACT }}
          path: ${{ runner.temp }}\build\release

